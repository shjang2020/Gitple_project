 SELECT B.BDAY_CUST_ID,SUM(IF(A.CURRENCY_CODE='KRW' OR A.CURRENCY_CODE=NULL,EVAL_AMT,EVAL_AMT*(SELECT RATE FROM betterday_db.BD_EXCHANGE_RATE B
					WHERE B.CURRENCY_CODE = A.CURRENCY_CODE
					AND date_format(CRT_DT,"%Y-%m-%d") = A.BASE_DATE 
					limit 1))) AS EVAL_SUM
     FROM betterday_db.MD_INVEST_ACCOUNTS_PRODUCTS A, betterday_db.MD_USER_TOKEN B, betterday_db.MD_INVEST_ACCOUNTS C, betterday_db.BDAY_CUST D
     WHERE B.ID = C.TOKEN_ID
     AND C.ID = A.INVEST_ACCOUNTS_ID
     AND D.ID = B.BDAY_CUST_ID
     AND (2022 - SUBSTR(D.BIRTH_DD,1,4) + 1 > 29 AND 2022 - SUBSTR(D.BIRTH_DD,1,4) + 1 < 40)
     GROUP BY BDAY_CUST_ID;
     
# 사업자 등록 번호, 등록되어있는 키 값에 대한 정보가 기획팀에 있다? 찾아봐야한다ㅏㅏ
# 그걸로 어디에 카드를 많이 사용하는 고객인지 활용해서 군집화를 진행하면 되겠다.

SELECT mut.BDAY_CUST_ID, SUM(miap.EVAL_AMT) FROM MD_INVEST_ACCOUNTS mia, MD_USER_TOKEN mut, MD_INVEST_ACCOUNTS_PRODUCTS miap 
WHERE mia.TOKEN_ID = mut.ID  AND miap.INVEST_ACCOUNTS_ID = mia.ID
GROUP BY mut.BDAY_CUST_ID;



SELECT mut.BDAY_CUST_ID, mba.ACCOUNT_TYPE FROM MD_BANK_ACCOUNTS mba, MD_USER_TOKEN mut
WHERE mba.TOKEN_ID = mut.ID;
-- GROUP BY mut.BDAY_CUST_ID;

select * from MD_BANK_ACCOUNTS mba 



SELECT C.BDAY_CUST_ID AS ID, SUM(EVAL_AMT)
FROM betterday_db.MD_INVEST_ACCOUNTS_PRODUCTS A, betterday_db.MD_INVEST_ACCOUNTS B, betterday_db.MD_USER_TOKEN C,  betterday_db.BDAY_CUST D
WHERE D.ID = C.BDAY_CUST_ID
AND C.ID = B.TOKEN_ID
AND A.INVEST_ACCOUNTS_ID = B.ID
GROUP BY C.BDAY_CUST_ID;


SELECT mut.BDAY_CUST_ID, SUM(miap.EVAL_AMT) FROM MD_INVEST_ACCOUNTS mia, MD_USER_TOKEN mut, MD_INVEST_ACCOUNTS_PRODUCTS miap 
WHERE mia.TOKEN_ID = mut.ID  AND miap.INVEST_ACCOUNTS_ID = mia.ID
GROUP BY mut.BDAY_CUST_ID;

############################################################################################################################################################################################
# 아이디별로 어떤 카테고리에 카드를 사용했는지 나와있는 것
SELECT mut.BDAY_CUST_ID, mcac.NAME  FROM MD_CARD_APPROVAL_CATEGORY mcac, MD_CARD_APPROVAL_DOMESTIC_HIST mcadh, MD_CARD_CARDS mcc, MD_USER_TOKEN mut
WHERE mcac.ID = mcadh.CATEGORY_ID AND mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID


# 카드내역이 존재하는 고객의 수는 367명인데
SELECT mut.BDAY_CUST_ID ,COUNT(*) FROM MD_CARD_APPROVAL_DOMESTIC_HIST mcadh , MD_CARD_CARDS mcc , MD_USER_TOKEN mut 
WHERE mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID
GROUP BY mut.BDAY_CUST_ID;

# 카드내역카테고리가 존재하는 고객의 수는 117명이다
SELECT mut.BDAY_CUST_ID ,COUNT(*) FROM MD_CARD_APPROVAL_CATEGORY mcac , MD_CARD_APPROVAL_DOMESTIC_HIST mcadh , MD_CARD_CARDS mcc , MD_USER_TOKEN mut 
WHERE mcac.ID = mcadh.CATEGORY_ID AND mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID
GROUP BY mut.BDAY_CUST_ID;

SELECT mut.BDAY_CUST_ID ,mcac.NAME , COUNT(*) FROM MD_CARD_APPROVAL_CATEGORY mcac , MD_CARD_APPROVAL_DOMESTIC_HIST mcadh , MD_CARD_CARDS mcc , MD_USER_TOKEN mut 
WHERE mcac.ID = mcadh.CATEGORY_ID AND mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID
GROUP BY mut.BDAY_CUST_ID, mcac.NAME;


SELECT TRUNCATE((TO_DAYS(NOW()) - TO_DAYS(BIRTH_DD)) / 365, 0)+1 AS AGE, bc.ID
FROM MD_CARD_APPROVAL_DOMESTIC_HIST mcadh , MD_CARD_CARDS mcc , MD_USER_TOKEN mut , BDAY_CUST bc 
WHERE mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID AND mut.BDAY_CUST_ID = bc.ID
AND mcadh.APPROVED_DTIME BETWEEN (SELECT DATE_SUB(NOW(), INTERVAL 1 MONTH)) AND NOW();


SELECT COUNT(*)
FROM MD_CARD_APPROVAL_DOMESTIC_HIST mcadh , MD_CARD_CARDS mcc , MD_USER_TOKEN mut , BDAY_CUST bc 
WHERE mcc.ID=mcadh.CARD_CARDS_ID AND mcc.TOKEN_ID = mut.ID AND mut.BDAY_CUST_ID = bc.ID;

