##### 예수금 변동 가격 확인 - 인선프로님 예시 결과 내역에 USD 와 KRW 가 있는데 USD 로 볼 경우 값이 정확하게 들어오지만, KRW를 마지막으로 인식했기 때문에 값이 정확하기 들어오지 않는 것을 볼 수 있음
##### 실제 값 : 340, 현재 보여지는 값 : 약 3만원

SELECT IFNULL(SUM(TO_WITH.WITH_AMT-FROM_WITH.WITH_AMT), 0)
FROM(
	SELECT B.INVEST_ACCOUNTS_ID, B.BALANCE_AMT * IF(IFNULL(B.CURRENCY_CODE, 'KRW')='KRW', 1, (SELECT D.RATE FROM betterday_db.BD_EXCHANGE_RATE as D WHERE D.CURRENCY_CODE = B.CURRENCY_CODE AND DATE_FORMAT(D.CRT_DT, "%Y-%m-%d") <= DATE_SUB(B.TRANS_DTIME, INTERVAL 1 DAY) ORDER BY CRT_DT DESC LIMIT 1)) AS WITH_AMT
	FROM (
		SELECT A.INVEST_ACCOUNTS_ID, MAX(A.TRANS_NO), A.BALANCE_AMT, A.CURRENCY_CODE, A.TRANS_DTIME
		FROM (
			SELECT *
			FROM MD_INVEST_ACCOUNTS_TRANS_HIST miath 
			WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
			AND TRANS_DTIME <= '2022-09-02'
			AND (INVEST_ACCOUNTS_ID, TRANS_DTIME) IN (SELECT INVEST_ACCOUNTS_ID, MAX(TRANS_DTIME) AS DTIME FROM MD_INVEST_ACCOUNTS_TRANS_HIST
							WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mia WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
							AND TRANS_DTIME <= '2022-09-02'
							GROUP BY INVEST_ACCOUNTS_ID)
			ORDER BY TRANS_DTIME DESC, TRANS_NO DESC
			) A
		GROUP BY INVEST_ACCOUNTS_ID
		#HAVING MAX(A.TRANS_NO) = TRANS_NO
		) B
) FROM_WITH
JOIN (
	SELECT B.INVEST_ACCOUNTS_ID, B.BALANCE_AMT * IF(IFNULL(B.CURRENCY_CODE, 'KRW')='KRW', 1, (SELECT D.RATE FROM betterday_db.BD_EXCHANGE_RATE as D WHERE D.CURRENCY_CODE = B.CURRENCY_CODE AND DATE_FORMAT(D.CRT_DT, "%Y-%m-%d") <= DATE_SUB(B.TRANS_DTIME, INTERVAL 1 DAY) ORDER BY CRT_DT DESC LIMIT 1)) AS WITH_AMT
	FROM (
		SELECT A.INVEST_ACCOUNTS_ID, MAX(A.TRANS_NO), A.BALANCE_AMT, A.CURRENCY_CODE, A.TRANS_DTIME
		FROM (
			SELECT *
			FROM MD_INVEST_ACCOUNTS_TRANS_HIST miath 
			WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
			AND TRANS_DTIME <= '2022-10-19'
			AND (INVEST_ACCOUNTS_ID, TRANS_DTIME) IN (SELECT INVEST_ACCOUNTS_ID, MAX(TRANS_DTIME) AS DTIME FROM MD_INVEST_ACCOUNTS_TRANS_HIST
							WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mia WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
							AND TRANS_DTIME <= '2022-10-19'
							GROUP BY INVEST_ACCOUNTS_ID)
			ORDER BY TRANS_DTIME DESC, TRANS_NO DESC
			) A
		GROUP BY INVEST_ACCOUNTS_ID
		#HAVING MAX(A.TRANS_NO) = TRANS_NO
		) B
) TO_WITH
ON FROM_WITH.INVEST_ACCOUNTS_ID = TO_WITH.INVEST_ACCOUNTS_ID
JOIN (
	SELECT FROM_ACC.INVEST_ACCOUNTS_ID
	FROM (
		SELECT DISTINCT C.INVEST_ACCOUNTS_ID
		FROM(
			SELECT A.INVEST_ACCOUNTS_ID, DATE_SUB(A.BASE_DATE, INTERVAL B.offset DAY) AS JJINT
			FROM
			MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
			INNER JOIN 
			(SELECT Z.ID, Z.TOKEN_ID, Z.IS_CONSENT, Z.ACCOUNT_TYPE, X.offset FROM (SELECT * FROM MD_INVEST_ACCOUNTS WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461)) Z 
			LEFT OUTER JOIN (SELECT ID, ORG_CODE FROM MD_USER_TOKEN WHERE BDAY_CUST_ID=461) Y ON Z.TOKEN_ID = Y.ID
			LEFT OUTER JOIN (SELECT * FROM betterday_admin.bo_stock_org_offset_bs_mngs WHERE bs_typ = 'PRODUCTS') X ON Y.ORG_CODE = X.org_cd COLLATE utf8mb4_unicode_ci) B
			ON A.INVEST_ACCOUNTS_ID = B.ID
		) C
		WHERE C.JJINT = '2022-09-02'
	) FROM_ACC
	JOIN (
		SELECT DISTINCT C.INVEST_ACCOUNTS_ID
		FROM(
			SELECT A.INVEST_ACCOUNTS_ID, DATE_SUB(A.BASE_DATE, INTERVAL B.offset DAY) AS JJINT
			FROM
			MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
			INNER JOIN 
			(SELECT Z.ID, Z.TOKEN_ID, Z.IS_CONSENT, Z.ACCOUNT_TYPE, X.offset FROM (SELECT * FROM MD_INVEST_ACCOUNTS WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461)) Z 
			LEFT OUTER JOIN (SELECT ID, ORG_CODE FROM MD_USER_TOKEN WHERE BDAY_CUST_ID=461) Y ON Z.TOKEN_ID = Y.ID
			LEFT OUTER JOIN (SELECT * FROM betterday_admin.bo_stock_org_offset_bs_mngs WHERE bs_typ = 'PRODUCTS') X ON Y.ORG_CODE = X.org_cd COLLATE utf8mb4_unicode_ci) B
			ON A.INVEST_ACCOUNTS_ID = B.ID
		) C
		WHERE C.JJINT = '2022-10-19'
	) TO_ACC
	ON FROM_ACC.INVEST_ACCOUNTS_ID = TO_ACC.INVEST_ACCOUNTS_ID
) ACC_ID
ON ACC_ID.INVEST_ACCOUNTS_ID = FROM_WITH.INVEST_ACCOUNTS_ID
;


####### 조회기간 산정하는 방식 계산 식 
SELECT IFNULL(MAX(BASE_DATE), (SELECT DATE_ADD(MIN(BASE_DATE), INTERVAL 1 DAY) FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))))  #SUPREMUM 구하기
FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
AND BASE_DATE <= '2022-07-20';

SELECT IFNULL(MAX(BASE_DATE), (SELECT MAX(BASE_DATE) FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))))#SUPREMUM 구하기
FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
AND BASE_DATE <= '2022-10-19';


#### 예외처리 예시 = 나올 경우가 없
SELECT IFNULL(MAX(BASE_DATE),(SELECT DATE_ADD(MIN(BASE_DATE), INTERVAL 1 DAY) FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))AND  BASE_DATE >= '2022-10-19')) #SUPREMUM 구하기
FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=461))
AND BASE_DATE <= '2022-10-19';

#### 
SELECT IFNULL(MAX(BASE_DATE), (SELECT MAX(BASE_DATE) FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=VAR_BDAY_CUST_ID)))) INTO SUP_TO_DATE #SUPREMUM 구하기
FROM MD_INVEST_ACCOUNTS_PRODUCTS_HIST A
WHERE INVEST_ACCOUNTS_ID IN(SELECT ID FROM MD_INVEST_ACCOUNTS mba WHERE TOKEN_ID IN (SELECT ID FROM MD_USER_TOKEN mut WHERE BDAY_CUST_ID=VAR_BDAY_CUST_ID))
AND BASE_DATE <= VAR_TO_DATE;





